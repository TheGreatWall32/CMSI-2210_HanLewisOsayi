1. 1) X = A + (B · C)
   2) X = (A NAND A) NAND (B NAND C)
   3) Y = ¬A + C
   4) Y = A NAND (C NAND C)

2.see HW4 #2.png

3.
a) R = R & 0xAAAAAAAA;
b) R = R | 0x7;            
c) R = R & 0x7;
d) R = ~0;
e) R = R ^ (0x3 << 30);
f) R = R & ~0x7;

4. In fizzbuzz.c

5. see 5.asm

6. C0000003 00000000 00000100 00000001 30000008 40000001 10000001 50000002 E0000003 C0000009

7. In gcd.asm

8. Store [TEMP]
   Load [0x30AA]
   Store [SWAPBUF]
   Load [TEMP]
   Store [0x30AA]
   Load [SWAPBUF]

9. see 9.asm

10. Part 1: it swaps whatever is in r8 and r9.
Part 2: because xor basically reverses itself.
